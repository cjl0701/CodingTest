""" 파라메트릭 서치 문제는 이진 탐색을 이용해 해결할 수 있다.
 파라메트릭 서치: 최적화 문제를 결정 문제('예' 혹은 '아니오')로 바꾸어 해결하는 기법
 예시: 특정한 조건을 만족하는 가장 알맞은 값을 빠르게 찾는 최적화 문제
 - 최적화 문제: 어떤 함수의 값을 최대한 높이거나 낮추는 문제
 """
# 가래떡들을 잘라 총 길이가 m이 되도록 할 때, 절단기에 설정할 수 있는 길이의 최대값
# 현재 이 높이로 자르면 조건을 만족할 수 있는가? => 만족 여부(yes or no)에 따라 탐색 범위를 좁힌다!
# 절단기의 범위 0~10억. 이렇게 범위가 크면 가장 먼저 이진 탐색을 떠올려야 한다! (선형은 시간 초과니까)
n, m = map(int, input().split())
arr = list(map(int, input().split()))
start, end = 0, max(arr)
ans = 0
while start <= end:
    mid = (start + end) // 2
    total = 0
    for x in arr:
        if x > mid:
            total += x - mid

    # 조건의 만족 여부에 따라 범위를 좁힌다!
    # 조건을 만족하면 정답 갱신! -> 최적화된 값을 찾게 된다.
    if total >= m:
        ans = mid  # 점점 최적해로 다가가므로..
        start = mid + 1
    else:
        e = mid - 1
""" 교훈: 복잡한 연산은 피하랬지. 시간 너무 잡아먹어. 다른 방법을 생각하면 되잖아. 한 발 물러나서 봐봐.
else:  # s>=e인 상태
    ans = s
    if cut(arr, s) < m:
        ans = -1
"""
print(ans)
